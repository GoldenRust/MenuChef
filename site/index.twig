{% extends "base.twig" %}
{% import "macros.twig" as helper %}


{% block title %}MenuChef - Create hamburgers' menu like a chef{% endblock title %}
{% block appendHead %}
<style type="text/css">
  .MenuChefOpen:not(.is-active) {
    display:  none;
  }
</style>
{% endblock appendHead %}
{% block content %}
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol id="i-flavors">
      <path fill-rule="evenodd" d="M157.904 49.207h-9.988c-.496-12.328-10.517-22.234-22.873-22.524-5.905-12.426-18.318-20.347-32.194-20.347-3.62 0-7.18.556-10.57 1.61C78.99 3.388 73.9.49 68.2.056c-1.28-.098-2.566-.068-3.82.088-7.965.983-14.3 6.703-16.22 14.302-2.085.033-4.17.238-6.2.63-16.433 3.162-28.437 17.432-28.882 34.13H3.095C1.385 49.206 0 50.596 0 52.31c0 3.752 8.125 14.116 12.06 18.547C18.195 77.765 27.2 86 35.252 86h90.496c8.054 0 17.057-8.235 23.192-15.145C152.875 66.425 161 56.06 161 52.308c0-1.712-1.386-3.1-3.096-3.1zm-16.183 0h-6.03c-.487-5.762-5.32-10.3-11.194-10.3s-10.71 4.54-11.195 10.3h-2.537l.003-.09c0-2.55-.524-4.978-1.464-7.186 2.287-4.21 9.06-9.05 15.19-9.05 9.2 0 16.738 7.244 17.235 16.335zm-12.28 0h-9.9c.45-2.33 2.5-4.098 4.956-4.098 2.456 0 4.505 1.76 4.953 4.09zM92.85 12.54c10.747 0 20.43 5.75 25.623 14.926-1.973.53-3.864 1.313-5.626 2.324-4.252-6.963-11.757-11.217-19.998-11.217-6.81 0-13.1 2.87-17.5 7.84-1.33-1.504-2.8-2.89-4.37-4.152.732-.81 1.51-1.58 2.324-2.3 5.39-4.78 12.33-7.413 19.537-7.413zm-.426 18.208c-1.227 0-2.45.122-3.636.363-2.955.6-5.628 1.9-7.86 3.71-.535-1.12-1.13-2.21-1.777-3.26 3.26-4.27 8.25-6.777 13.7-6.777 6.28 0 11.98 3.365 15.04 8.817-.84.842-1.63 1.745-2.34 2.716-3.33-3.426-7.98-5.56-13.12-5.56zm12.143 18.368l-.002.092h-24.28c-.002-.03-.004-.06-.004-.092 0-5.773 4.1-10.788 9.74-11.925.785-.15 1.596-.24 2.41-.24 6.698 0 12.145 5.46 12.145 12.17zM65.142 6.3c.85-.106 1.722-.127 2.593-.06 3.344.254 6.384 1.763 8.584 4.17-2.54 1.332-4.94 2.968-7.12 4.902-1.21 1.075-2.356 2.245-3.41 3.475-3.53-1.937-7.34-3.247-11.31-3.89 1.6-4.597 5.65-7.98 10.66-8.597zm-22.01 14.867c1.828-.353 3.71-.53 5.594-.53 12.544 0 23.518 7.774 27.726 19.484-1.508 2.68-2.362 5.76-2.362 9l.002.09h-1.937c-.505-12.51-10.817-22.54-23.43-22.54-12.61 0-22.923 10.03-23.427 22.54h-6.026c.442-13.73 10.335-25.44 23.86-28.04zm5.594 17.74c-5.874 0-10.708 4.54-11.195 10.3H31.5c.497-9.09 8.036-16.335 17.233-16.335 9.197 0 16.736 7.244 17.234 16.335h-6.04c-.485-5.76-5.32-10.3-11.193-10.3zm4.954 10.3h-9.908c.45-2.33 2.498-4.098 4.954-4.098 2.456 0 4.505 1.76 4.954 4.09zm89.983 18.25c-7.113 7.843-13.643 12.34-17.915 12.34H35.252c-4.272 0-10.802-4.497-17.915-12.34-4.147-4.57-7.377-9.037-9.284-12.047h144.894c-1.907 3.01-5.136 7.475-9.284 12.048z"/>
  </symbol>
  <symbol id="i-table">
    <path fill-rule="evenodd"  d="M40.458,72.288 C37.591,72.288 35.267,70.067 35.267,67.324 C35.267,64.577 37.591,62.350 40.458,62.350 C43.326,62.350 45.650,64.577 45.650,67.324 C45.650,70.066 43.326,72.288 40.458,72.288 ZM43.097,48.259 C43.097,45.516 45.421,43.292 48.289,43.292 C51.156,43.292 53.478,45.516 53.478,48.259 C53.478,50.999 51.156,53.223 48.289,53.223 C45.421,53.223 43.097,50.999 43.097,48.259 ZM75.144,84.266 C74.652,84.266 74.167,84.196 73.680,84.034 L53.464,76.963 C51.010,76.173 49.665,73.561 50.472,71.153 C51.274,68.726 53.924,67.406 56.379,68.215 L76.598,75.281 C79.052,76.071 80.392,78.679 79.585,81.101 C78.938,83.034 77.107,84.266 75.144,84.266 ZM50.438,29.789 C50.439,27.046 52.763,24.819 55.630,24.819 C58.495,24.819 60.820,27.046 60.820,29.789 C60.820,32.533 58.495,34.757 55.630,34.757 C52.763,34.757 50.438,32.533 50.438,29.789 ZM66.276,33.420 C66.955,30.966 69.561,29.523 72.024,30.194 L92.304,36.359 C94.795,37.028 96.273,39.566 95.588,42.023 C95.013,44.068 93.134,45.416 91.082,45.416 C90.667,45.416 90.246,45.358 89.841,45.249 L69.560,39.087 C67.059,38.415 65.595,35.877 66.276,33.420 ZM82.740,65.050 C82.255,65.047 81.774,64.975 81.284,64.815 L61.110,57.715 C58.660,56.907 57.341,54.301 58.153,51.882 C58.976,49.473 61.616,48.174 64.081,48.977 L84.246,56.073 C86.706,56.880 88.023,59.489 87.208,61.902 C86.551,63.838 84.708,65.060 82.740,65.050 ZM121.771,22.402 C121.657,22.752 110.142,55.844 98.795,85.377 C90.941,105.812 84.673,118.567 66.837,118.980 C60.225,119.274 54.141,116.420 54.132,116.415 L15.158,98.988 C15.158,98.988 -3.265,93.308 0.517,69.694 L53.750,90.871 C53.750,90.871 53.450,111.799 70.118,109.498 C70.118,109.512 70.127,109.521 70.137,109.530 C78.292,108.173 82.583,101.526 90.040,82.114 C98.593,59.866 107.515,35.972 111.265,24.524 L51.227,9.435 L26.267,72.093 L17.474,68.938 L43.812,3.040 C44.600,0.897 46.847,-0.342 49.124,0.093 L118.222,16.499 C119.524,16.756 120.652,17.547 121.337,18.674 C122.016,19.799 122.177,21.149 121.771,22.402 Z"/>
  </symbol>
  <symbol id="i-oven">
    <path fill-rule="evenodd" d="M102.76 68.092l-1.615 1.078 7.295 10.138-9.86 6.59-6.583-9.84-35.393 23.66c-8.103 5.417-18.285 7.39-27.936 5.412-9.388-1.923-17.315-7.266-22.407-15.058C-4.265 73.872.258 51.94 16.348 41.184l7.067-4.724c-6.22-2.295-10.378-8.293-9.953-14.836.278-4.267 2.383-8.207 5.77-10.81 3.4-2.612 7.742-3.637 11.934-2.81.147.032 14.64 3.023 22.31 4.772 2.548.58 5.26.075 7.44-1.384l3.083-2.06L77.14.545l39.504 59.038-13.883 8.51zm-3.655 12.29l2.907-1.95-3.884-5.832-2.908 1.952 3.885 5.83zm-6.4-15.637l-.302 1.514 1.81-1.217-1.508-.298zM64.027 27.447l-5.457-1.08.857-4.3 5.457 1.078.842-4.227-1.04-1.563-2.728 1.83c-2.726 1.83-6.12 2.465-9.306 1.736-6.756-1.546-19.545-4.2-19.66-4.224-2.705-.536-5.524.133-7.732 1.838-2.232 1.72-3.562 4.224-3.745 7.05-.31 4.79 5.022 6.256 9.972 7.24.355.07.664.235.947.433l8 2c.436.11.795.378 1.028.728.264.397.367.9.243 1.4.712 1.055.776 4.864-3.953 4.167l-6.75-1.69c-.133.148-.273.29-.443.405l-8.036 5.395C9.868 54.16 6.31 71.49 14.594 84.29c3.918 6.122 10.215 10.345 17.6 11.864 7.632 1.57 15.676.007 22.073-4.288l31.316-21.028 2.11-1.416-.38-.075 1.088-5.455-5.456-1.08.857-4.3 5.458 1.078.82-4.115-5.42-8.135-4.14-.818-1.087 5.454-4.303-.85 1.087-5.457-5.457-1.08.857-4.302 5.457 1.08.832-4.172-5.374-8.067-4.197-.83-1.086 5.454-4.304-.85 1.087-5.457zm9.38-15.95l-5.815 3.905 2 3.004.682.134-.136.684 3.805 5.712.7.14-.14.702 7.22 10.84.738.145-.146.74 3.76 5.645.757.15-.15.76 7.175 10.77.793.157-.16.796 3.717 5.58.813.16-.07.345 5.535-3.716-31.075-46.653z"/>
  </symbol>
  <symbol id="i-browser">
    <path fill-rule="evenodd" d="M174.763 141H3.237C1.45 141 0 139.552 0 137.766V3.234C0 1.447 1.45 0 3.237 0h171.526C176.55 0 178 1.447 178 3.234v134.532c0 1.786-1.45 3.234-3.237 3.234zM171.526 6.468H6.473v13.8h165.053V6.47zm0 20.27H6.473V134.53h165.053V26.737zM14.336 9.03c.953 0 1.886.387 2.563 1.06.67.676 1.055 1.61 1.055 2.568 0 .952-.387 1.886-1.06 2.563-.676.68-1.61 1.067-2.562 1.067-.957 0-1.89-.386-2.568-1.063-.672-.676-1.064-1.61-1.064-2.562 0-.957.393-1.89 1.065-2.567.677-.673 1.61-1.06 2.568-1.06zm12.393 0c.954 0 1.89.387 2.564 1.06.672.676 1.06 1.61 1.06 2.568 0 .952-.388 1.886-1.06 2.563-.677.68-1.61 1.067-2.568 1.067-.953 0-1.886-.386-2.563-1.063-.677-.676-1.064-1.61-1.064-2.562 0-.952.387-1.89 1.064-2.567.677-.673 1.61-1.06 2.562-1.06zm12.395 0c.957 0 1.89.387 2.568 1.06.672.676 1.06 1.61 1.06 2.568 0 .952-.388 1.886-1.06 2.563-.677.68-1.61 1.067-2.568 1.067-.953 0-1.886-.386-2.563-1.063-.677-.676-1.064-1.61-1.064-2.562 0-.957.387-1.89 1.064-2.567.677-.673 1.61-1.06 2.563-1.06z"/>
  </symbol>
  <symbol id="i-browser-menu-side">
    <path fill-rule="evenodd"  opacity="0.859" fill="rgb(242, 218, 126)" d="M0.300,0.883 L77.313,0.883 L77.313,108.871 L0.300,108.871 L0.300,0.883 Z"/>
  </symbol>
  <symbol id="i-browser-menu-center">
    <path fill-rule="evenodd"  opacity="0.859" fill="rgb(242, 218, 126)" d="M-0.010,0.008 L166.000,0.008 L166.000,107.996 L-0.010,107.996 L-0.010,0.008 Z"/>
  </path>
  </symbol>


</svg>

<nav class="js-Menu oldmenu" style="display: none; ">
  <a href="#home">Home</a>
  <a href="#flavors">Our Flavors</a>
  <a href="#nutritionaltable">Nutritional Table</a>
</nav>

<section class="Flavors" id="flavors">
  <div class="container">
    <div class="titleContainer">
      <svg class="icon icon--title icon--flavors">
        <use xlink:href="#i-flavors" />
      </svg>
      <h2 class="titleAccent">Our</h2>
      <h1 class="title">Flavors</h1>
    </div><!-- /.titleContainer -->

    <div class="Flavors-items">
      <div class="Flavors-item">
        <h3 class="Flavors-item-type">Left</h3>
        <div class="Flavors-item-icon">
          <svg class="Flavors-item-browser">
            <use xlink:href="#i-browser" />
          </svg>
          <svg class="Flavors-item-menu Flavors-item-menu--left">
            <use xlink:href="#i-browser-menu-side" />
          </use>
        </div>
        <h4 class="Flavors-item-recipe">Recipe</h4>
        <div class="Flavors-item-code js-Flavors-item-code">
          <pre v-html="menuchef.left.html"></pre>
        </div>
        <h3 class="Flavors-item-colors-title">Select seasoning</h3>

        <ul class="Flavors-item-colors">
          <li v-for="color in colors" class="Flavors-item-colors-color" :class="['Flavors-item-colors-color--'+color, {'is-active': colorActive == color }]">
            <button @click="colorActive = color"></button>
          </li>
        </ul>

        <h3 class="Flavors-item-colors-title">Method of preparation</h3>

        <div class="Flavors-item-checkboxes">
          <label class="Flavors-item-checkbox"><input class="uk-checkbox" type="checkbox" v-model="effectsOnOpen.smooth"> <span>Smooth</span></label>
          <label class="Flavors-item-checkbox"><input class="uk-checkbox" type="checkbox" v-model="pageEffect.blur"> <span>Blur</span></label>
        </div>

        <div class="buttonContainer">
          <button class="button" @click="openMenu('left')"><i class="fa fa-bars"></i> taste</button>
          <button class="button js-copy" data-code="left"><i class="fa fa-clone"></i> copy</button>
        </div>

      </div>

      <div class="Flavors-item">
        <h3 class="Flavors-item-type">Center</h3>
        <div class="Flavors-item-icon">
          <svg class="Flavors-item-browser">
            <use xlink:href="#i-browser" />
          </svg>
          <svg class="Flavors-item-menu Flavors-item-menu--center">
            <use xlink:href="#i-browser-menu-center" />
          </use>
        </div>
        <h4 class="Flavors-item-recipe">Recipe</h4>
        <div class="Flavors-item-code js-Flavors-item-code">
          <pre v-html="menuchef.center.html"></pre>
        </div>

        <h3 class="Flavors-item-colors-title">Select seasoning</h3>

        <ul class="Flavors-item-colors">
          <li v-for="color in colors" class="Flavors-item-colors-color" :class="['Flavors-item-colors-color--'+color, {'is-active': colorActive == color }]">
            <button @click="colorActive = color"></button>
          </li>
        </ul>

        <div class="buttonContainer">
          <button class="button" @click="openMenu('center')"><i class="fa fa-bars"></i> taste</button>
          <button class="button js-copy" data-code="center"><i class="fa fa-clone"></i> copy</button>
        </div>
      </div>

      <div class="Flavors-item">
        <h3 class="Flavors-item-type">Right</h3>
        <div class="Flavors-item-icon">
          <svg class="Flavors-item-browser">
            <use xlink:href="#i-browser" />
          </svg>
          <svg class="Flavors-item-menu Flavors-item-menu--right">
            <use xlink:href="#i-browser-menu-side" />
          </use>
        </div>
        <h4 class="Flavors-item-recipe">Recipe</h4>
        <div class="Flavors-item-code js-Flavors-item-code">
          <pre v-html="menuchef.right.html"></pre>
        </div>

        <h3 class="Flavors-item-colors-title">Select seasoning</h3>

        <ul class="Flavors-item-colors">
          <li v-for="color in colors" class="Flavors-item-colors-color" :class="['Flavors-item-colors-color--'+color, {'is-active': colorActive == color }]">
            <button @click="colorActive = color"></button>
          </li>
        </ul>

        <h3 class="Flavors-item-colors-title">Method of preparation</h3>

        <div class="Flavors-item-checkboxes">
          <label class="Flavors-item-checkbox"><input class="uk-checkbox" type="checkbox" v-model="effectsOnOpen.smooth"> <span>Smooth</span></label>
          <label class="Flavors-item-checkbox"><input class="uk-checkbox" type="checkbox" v-model="pageEffect.blur"> <span>Blur</span></label>
        </div>

        <div class="buttonContainer">
          <button class="button" @click="openMenu('right')"><i class="fa fa-bars"></i> taste</button>
          <button class="button js-copy" data-code="right"><i class="fa fa-clone"></i> copy</button>
        </div>
      </div>
    </div><!-- /.Flavors-items -->
  </div><!-- /.container -->
</section>

<section class="Preheating" id="preheating">
  <div class="container">
    <div class="titleContainer">
      <svg class="icon icon--title icon--oven">
        <use xlink:href="#i-oven" />
      </svg>
      <h2 class="titleAccent">Preheating</h2>
      <h1 class="title">the oven</h1>
    </div><!-- /.titleContainer -->

    <div class="Preheating-text">
      <p>
        MenuChef helps you to create hamburgers' menu easily even without knowing how to cook. You just need call the MenuChef.js in your page and initiate like the examples above. It's light (approximately 55kb, <b>13kb gzipped</b>) and you don't need change the HTML code of the menu original. You can personalize it by CSS or by <a href="#nutritionaltable">options</a>.
      </p>

      <p>
        You can download the latest version of MenuChef in <a href="https://github.com/theus/menuchef">Github</a> or can use the unpkg CDN
      </p>

      <pre><code class="language-html">&lt;script src="//unpkg.com/menuchef@{{version}}"&gt;&lt;/script&gt;</code></pre>

    </div>

  </div>
</section>

<section class="NutricionalTable" id="nutritionaltable">
  <div class="container">
    <div class="titleContainer">
      <svg class="icon icon--title icon--table">
        <use xlink:href="#i-table" />
      </svg>
      <h2 class="titleAccent">Nutritional</h2>
      <h1 class="title">Table</h1>
    </div><!-- /.titleContainer -->

    <div class="NutricionalTable-table">
      <h2 id="Constructor" class="NutricionalTable-table-title">Constructor</h2>
      <table class="table table-hover">
        <thead>
          <tr>
            <th class="NutricionalTable-table-var">Variable</th>
            <th class="NutricionalTable-table-type">Type</th>
            <th class="NutricionalTable-table-default">Default</th>
            <th class="NutricionalTable-table-desc">Description</th>
          </tr>
        </thead>
        <tbody>
          {% for item in doc.constructor  %}
            <tr>
              {{ helper.item(search(item.tags, 'title', 'variable').description, item.name) }}
              <td>{{ label(search(item.tags, 'title', 'type').description) }}</td>
              <td>{{ search(item.tags, 'title', 'default').description }}</td>
              <td>{{ search(item.tags, 'title', 'description').description }}</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>

      <h2 id="Options" class="NutricionalTable-table-title">Options</h2>
      <table class="table table-hover">
        <thead>
          <tr>
            <th class="NutricionalTable-table-var">Variable</th>
            <th class="NutricionalTable-table-type">Type</th>
            <th class="NutricionalTable-table-default">Default</th>
            <th class="NutricionalTable-table-desc">Description</th>
          </tr>
        </thead>
        <tbody>
          {% for item in doc.options  %}
            <tr>
              {{ helper.item(search(item.tags, 'title', 'variable').description, item.name, search(item.tags, 'title', 'released').description) }}
              <td>{{ label(search(item.tags, 'title', 'type').description) }}</td>
              <td>{{ search(item.tags, 'title', 'default').description }}</td>
              <td>{{ search(item.tags, 'title', 'description').description }}</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>

      <h2 id="Theme-Options" class="NutricionalTable-table-title">Theme Options</h2>
      <table class="table table-hover">
        <thead>
          <tr>
            <th class="NutricionalTable-table-var">Variable</th>
            <th class="NutricionalTable-table-type">Type</th>
            <th class="NutricionalTable-table-default">Default</th>
            <th class="NutricionalTable-table-desc">Description</th>
          </tr>
        </thead>
        <tbody>
          {% for item in doc.theme  %}
            <tr>
              {{ helper.item(search(item.tags, 'title', 'variable').description, item.name) }}
              <td>{{ label(search(item.tags, 'title', 'type').description) }}</td>
              <td>{{ search(item.tags, 'title', 'default').description }}</td>
              <td>{{ search(item.tags, 'title', 'description').description }}</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>

      <h2 id="Methods" class="NutricionalTable-table-title">Methods</h2>
      <table class="table table-hover">
        <thead>
          <tr>
            <th class="NutricionalTable-table-var">Variable</th>
            <th class="NutricionalTable-table-type">Type</th>
            <th class="NutricionalTable-table-default">Default</th>
            <th class="NutricionalTable-table-desc">Description</th>
          </tr>
        </thead>
        <tbody>
          {% for item in doc.public_methods  %}
            <tr>
              {{ helper.item(search(item.tags, 'title', 'variable').description, item.name) }}
              <td>{{ label(search(item.tags, 'title', 'type').description) }}</td>
              <td>{{ search(item.tags, 'title', 'default').description }}</td>
              <td>{{ search(item.tags, 'title', 'description').description }}</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>

      <h2 id="Public-Variables" class="NutricionalTable-table-title">Public Variables</h2>
      <table class="table table-hover">
        <thead>
          <tr>
            <th class="NutricionalTable-table-var">Variable</th>
            <th class="NutricionalTable-table-type">Type</th>
            <th class="NutricionalTable-table-default">Default</th>
            <th class="NutricionalTable-table-desc">Description</th>
          </tr>
        </thead>
        <tbody>
          {% for item in doc.public_variables  %}
            <tr>
              {{ helper.item(search(item.tags, 'title', 'variable').description, item.name) }}
              <td>{{ label(search(item.tags, 'title', 'type').description) }}</td>
              <td>{{ search(item.tags, 'title', 'default').description }}</td>
              <td>{{ search(item.tags, 'title', 'description').description }}</td>
            </tr>
          {% endfor %}

        </tbody>
      </table>

      <h2 id="Theming-Vars" class="NutricionalTable-table-title">Theming Vars</h2>

      <p>
        MenuChef was created with <a href="http://caniuse.com/#feat=css-variables" target="_blank">CSS variables</a>, so it's very easy change some elements of the interface just changing a couple of variables, with sort, without change the CSS in fact. The support of CSS variables isn't complete yet in some browsers, so if you want support those browsers, you can overwrite CSS theme default below. If you choose overwrite the CSS theme, don't forget to put <code>!important</code> because the MenuChef's style is injected by JS, so you CSS can't overwrite by cascade.
      </p>

      <pre class="Code"><code class="language-css">/* open hamburger button */
.MenuChefOpen .hamburger-inner,
.MenuChefOpen .hamburger-inner::before,
.MenuChefOpen .hamburger-inner::after {
  background-color: #A0A1A5 !important; /* fallback */
  background-color: var(--MenuChef-scheme-color, #A0A1A5) !important; /* try use CSS var with fallback */
}

/* close hamburger button */
.MenuChefOpen.is-active .hamburger-inner,
.MenuChefOpen.is-active .hamburger-inner::before,
.MenuChefOpen.is-active .hamburger-inner::after {
  background-color: #28292E !important; /* fallback */
  background-color: var(--MenuChef-scheme-color, #28292E) !important; /* try use CSS var with fallback */
}

/* Menuchef kitchen: link's area */
.MenuChef {
  background-color: #28292E !important; /* fallback */
  background-color: var(--MenuChef-scheme-bgcolor, #28292E) !important; /* try use CSS var with fallback */
}

/* Menuchef links */
.MenuChef .MenuChef-links-link {
  color: #A0A1A5  !important; /* fallback */
  color: var(--MenuChef-scheme-color, #A0A1A5)  !important; /* try use CSS var with fallback */
}

/* Menuchef links hover */
.MenuChef .MenuChef-links-link:hover {
  color: #86878c  !important; /* fallback */
  color: var(--MenuChef-scheme-color-hover, #86878c)  !important; /* try use CSS var with fallback */
}</code></pre>

      <table class="table table-hover">
        <thead>
          <tr>
            <th class="NutricionalTable-table-var">Variable</th>
            <!-- <th class="NutricionalTable-table-type">Type</th> -->
            <th dev-class="NutricionalTable-table-default">Default</th>
            <th class="NutricionalTable-table-desc">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            {{ helper.item('--MenuChef-scheme-bgcolor', 'Theming-Vars') }}
            <td>It depend's of scheme</td>
            <td>MenuChef kitchen's background color</td>
          </tr>

          <tr>
            {{ helper.item('--MenuChef-scheme-color', 'Theming-Vars') }}
            <td>It depend's of scheme</td>
            <td>Links color</td>
          </tr>

          <tr>
            {{ helper.item('--MenuChef-scheme-color-hover', 'Theming-Vars') }}
            <td>It depend's of scheme</td>
            <td>Links hover color</td>
          </tr>

        </tbody>
      </table>

      <h2 id="Others-Vars" class="NutricionalTable-table-title">Others Vars</h2>
      <table class="table table-hover">
        <thead>
          <tr>
            <th class="NutricionalTable-table-var">Variable</th>
            <!-- <th class="NutricionalTable-table-type">Type</th> -->
            <th dev-class="NutricionalTable-table-default">Default</th>
            <th class="NutricionalTable-table-desc">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            {{ helper.item('--MenuChef-font-family', 'Others-Vars') }}
            <td>'Helvetica', 'Arial', sans-serif</td>
            <td>Font family of links</td>
          </tr>
          <tr>
            {{ helper.item('--MenuChef-font-size', 'Others-Vars') }}
            <td>16px</td>
            <td>Font size of links</td>
          </tr>
          <tr>
            {{ helper.item('--MenuChef-margin-bottom', 'Others-Vars') }}
            <td>25px</td>
            <td>Margin bottom between links</td>
          </tr>
          <tr>
            {{ helper.item('--MenuChef-text-transform', 'Others-Vars') }}
            <td>uppercase</td>
            <td>Text transform of links</td>
          </tr>
          <tr>
            {{ helper.item('--MenuChef-transition', 'Others-Vars') }}
            <td>color linear .15s</td>
            <td>Transition for links hover</td>
          </tr>
          <tr>
            {{ helper.item('--MenuChef-font-weight', 'Others-Vars') }}
            <td>bold</td>
            <td>Links font weight</td>
          </tr>
          <tr>
            {{ helper.item('--MenuChef-theme_side-width', 'Others-Vars') }}
            <td>20%</td>
            <td>Default width of MenuChef's kitchen</td>
          </tr>
          <tr>
            {{ helper.item('--MenuChef-theme_side-min-width', 'Others-Vars') }}
            <td>240px</td>
            <td>Minimum width of MenuChef's kitchen</td>
          </tr>

        </tbody>
      </table>

      <h2 id="Default-Options" class="NutricionalTable-table-title">Default Options</h2>

      <p>
        Example of all MenuChef default options
      </p>

      <pre class="Code"><code class="language-javascript">new MenuChef('.old-menu a', {
  theme: {
    theme: 'full',
    effectOnOpen: '',
    direction: '',
    pageEffect: ''
  },

  scheme: 'black',
  closeOnClick: true,
  closeOnClickOutside: true,

  classes: {
    exclude: [],
    only: [],
    include: []
  },

  hamburger: 'boring',
  bodyClassOpen: '',
  kitchenClass: '',
  kitchenOpenClass: '',

  onOpen: function () {},
  onClose: function () {},
  onClick: function () {},
  onReady: function () {}
});</code></pre>

    </div>

  </div>
</section>

{% endblock content %}
{% block scripts %}
<script src="assets/js/rellax.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/prism.min.js"></script>
<script src="https://unpkg.com/vue@2.3.2/dist/vue.js"></script>
<script src="https://unpkg.com/clipboard@1.6.1/dist/clipboard.min.js"></script>
<script src="assets/js/tabelinha.min.js"></script>
<script async defer src="https://buttons.github.io/buttons.js"></script>

<script>
  $('table').tabelinha({
    dtpItemInicial: 0,
    mobItemInicial: 0,
    numItens: 100,
    minMedia: 500
  });

  $flavors = new Vue({
    name: 'Flavors',
    el: '#flavors',
    data: {
      colorActive: 'black',
      colors: ['black','yellow','red','green','blue'],
      effectsOnOpen: {
        smooth: false
      },
      pageEffect: {
        blur: false
      },
    },
    methods: {
      openMenu: function (theme) {
        scheme = this.colorActive;
        smooth = this.effectsOnOpen.smooth;
        blur = this.pageEffect.blur;

        direction = false;

        if (theme == 'left' || theme == 'right') {
          direction = theme;
          theme = 'side';
        } else {
          theme = 'center';
        }

        try {
          MenuChef.destroy();
        } catch(e) {}

        new MenuChef('.js-Menu a', {
          scheme: scheme,
          theme: {
            theme: theme,
            direction: (direction) ? direction : '',
            effectOnOpen: (smooth) ? 'smooth' : '',
            pageEffect: (blur) ? 'blur' : ''
          },
          onClose: function () {
          }
        });

        window.setTimeout(function () {
          MenuChef.open();
        }, 100);
      }
    },
    computed: {
      menuchef: function () {
        var _scheme = (this.colorActive !== 'black') ? "  scheme: '"+this.colorActive+"',\n" : '';
        var _effectOnOpenSmooth = (this.effectsOnOpen.smooth) ? "    effectOnOpen: 'smooth',\n" : '';
        var _pageEffectBlur = (this.pageEffect.blur) ? "    pageEffect: 'blur',\n" : '';

        var _left = 'new MenuChef(\'.oldmenu a\', {\n'+

        // dinamic
        String(_scheme) +

        '  theme: {\n'+
        '    theme: \'side\',\n'+
        '    direction: \'left\',\n'+

            // dinamic
            String(_effectOnOpenSmooth) +
            String(_pageEffectBlur) +

        '  }\n'+
        '})';
        var _center = 'new MenuChef(\'.oldmenu a\''+

        // dinamic
        (function () {
          if (!!_scheme) return ', {\n' +
            String(_scheme) +
          '}'
          return ''
        })() +

        ')';

        var _right = 'new MenuChef(\'.oldmenu a\', {\n'+

        // dinamic
        String(_scheme) +

        '  theme: '+

          // dinamic
          (function () {
            if (!!_effectOnOpenSmooth || !!_pageEffectBlur) return '{\n' +
              '    theme: \'side\', \n' +
              String(_effectOnOpenSmooth) +
              String(_pageEffectBlur) +
            '  }\n'
            return '\'side\', \n'
          })() +

        '})';

        return {
          left: {
            raw: _left,
            html: Prism.highlight(_left, Prism.languages.javascript)
          },
          center: {
            raw: _center,
            html: Prism.highlight(_center, Prism.languages.javascript)
          },
          right: {
            raw: _right,
            html: Prism.highlight(_right, Prism.languages.javascript)
          }
        }

      }
    },
    mounted: function () {
      $('.Flavors-item').hover(function() {
        $(this).addClass('is-active').parent().addClass('is-hover');
      }, function() {
        $(this).removeClass('is-active').parent().removeClass('is-hover');
      })
    }
  });

  //if (window.innerWidth > 768)
  var rellax = new Rellax('.rellax');

  var clipboard = new Clipboard('.js-copy', {
    text: function(trigger) {
      return $flavors.menuchef[trigger.dataset.code].raw;
    }
  });

  clipboard.on('success', function(e) {
    var _old = e.trigger.innerHTML;
    e.trigger.textContent = 'copied';
    e.clearSelection();

    window.setTimeout(function() {
      e.trigger.innerHTML = _old;
    }, 5000);
  });

</script>
{% endblock scripts %}